<x-app-layout :site="$site ?? null">
    <x-slot name="header">
        <h2 class="font-semibold text-xl text-gray-800 leading-tight">
            {{ __('Manage Site Packages') }}
        </h2>
    </x-slot>

    <div class="py-12">
        <div class="max-w-7xl mx-auto sm:px-6 lg:px-8">
            <div class="bg-white overflow-hidden shadow-xl sm:rounded-lg">
                <div class="p-6">
                    <div class="mb-4">
                        <h4 class="text-lg font-medium mb-2">Select Site</h4>
                        <select id="site-select" class="form-control w-full max-w-md">
                            <option value="">Select a site...</option>
                            @foreach($sites as $site)
                                <option value="{{ $site->id }}">{{ $site->site_name }} ({{ $site->host }})</option>
                            @endforeach
                        </select>
                    </div>

                    <div id="package-management" style="display: none;">
                        <h4 class="text-lg font-medium mb-4">Available Packages</h4>
                        <div class="overflow-x-auto">
                            <table class="min-w-full divide-y divide-gray-200">
                                <thead class="bg-gray-50">
                                    <tr>
                                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Package</th>
                                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Description</th>
                                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
                                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Expiry Date</th>
                                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
                                    </tr>
                                </thead>
                                <tbody class="bg-white divide-y divide-gray-200">
                                    @foreach($packages as $package)
                                        <tr data-package-id="{{ $package->id }}">
                                            <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">{{ $package->name }}</td>
                                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{{ $package->description }}</td>
                                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 subscription-status">Not Subscribed</td>
                                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 expiry-date">-</td>
                                            <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                                                <button class="subscribe-btn bg-green-600 hover:bg-green-700 text-white font-bold py-2 px-4 rounded text-sm">
                                                    Subscribe
                                                </button>
                                                <button class="unsubscribe-btn bg-red-600 hover:bg-red-700 text-white font-bold py-2 px-4 rounded text-sm" style="display: none;">
                                                    Unsubscribe
                                                </button>
                                            </td>
                                        </tr>
                                    @endforeach
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    @push('scripts')
    <script>
    document.addEventListener('DOMContentLoaded', function() {
        const siteSelect = document.getElementById('site-select');
        const packageManagement = document.getElementById('package-management');

        siteSelect.addEventListener('change', function() {
            const siteId = this.value;
            if (siteId) {
                fetchSitePackages(siteId);
                packageManagement.style.display = 'block';
            } else {
                packageManagement.style.display = 'none';
            }
        });

        function fetchSitePackages(siteId) {
            fetch(`/sites/${siteId}/packages`)
                .then(response => response.json())
                .then(data => {
                    updatePackageTable(data);
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Failed to fetch site packages');
                });
        }

        function updatePackageTable(subscriptions) {
            const rows = document.querySelectorAll('tr[data-package-id]');
            rows.forEach(row => {
                const packageId = row.dataset.packageId;
                const subscription = subscriptions.find(s => s.id === parseInt(packageId));
                
                const statusCell = row.querySelector('.subscription-status');
                const expiryCell = row.querySelector('.expiry-date');
                const subscribeBtn = row.querySelector('.subscribe-btn');
                const unsubscribeBtn = row.querySelector('.unsubscribe-btn');

                if (subscription && subscription.pivot && subscription.pivot.is_active) {
                    statusCell.textContent = 'Subscribed';
                    expiryCell.textContent = subscription.pivot.expires_at || 'No expiry';
                    subscribeBtn.style.display = 'none';
                    unsubscribeBtn.style.display = 'inline-block';
                } else {
                    statusCell.textContent = 'Not Subscribed';
                    expiryCell.textContent = '-';
                    subscribeBtn.style.display = 'inline-block';
                    unsubscribeBtn.style.display = 'none';
                }
            });

            setupPackageButtons();
        }

        function setupPackageButtons() {
            document.querySelectorAll('.subscribe-btn').forEach(btn => {
                btn.onclick = function() {
                    const siteId = siteSelect.value;
                    const packageId = this.closest('tr').dataset.packageId;
                    
                    fetch(`/api/admin/packages/${packageId}/subscribe`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]').content
                        },
                        body: JSON.stringify({
                            site_id: siteId
                        })
                    })
                    .then(response => response.json())
                    .then(() => {
                        fetchSitePackages(siteId);
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        alert('Failed to subscribe to package');
                    });
                };
            });

            document.querySelectorAll('.unsubscribe-btn').forEach(btn => {
                btn.onclick = function() {
                    const siteId = siteSelect.value;
                    const packageId = this.closest('tr').dataset.packageId;
                    
                    fetch(`/api/admin/packages/${packageId}/unsubscribe`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]').content
                        },
                        body: JSON.stringify({
                            site_id: siteId
                        })
                    })
                    .then(response => response.json())
                    .then(() => {
                        fetchSitePackages(siteId);
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        alert('Failed to unsubscribe from package');
                    });
                };
            });
        }
    });
    </script>
    @endpush
</x-app-layout>
